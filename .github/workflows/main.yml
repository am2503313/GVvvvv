name: Cl

on:
  push
  workflow_dispatch

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download Ngrok
        run: Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"

      - name: Extract Ngrok
        run: Expand-Archive -Path "ngrok.zip" -DestinationPath "ngrok"

      - name: Authenticate Ngrok
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Start Ngrok Tunnel
        run: Start-Process -NoNewWindow -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389"

      - name: Wait for Ngrok to Start
        run: Start-Sleep -Seconds 10

      - name: Get Ngrok Public URL
        run: |
          $ngrokUrl = (Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels").tunnels[0].public_url
          echo "NGROK_URL=$ngrokUrl" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

      - name: Display RDP Address
        run: echo "RDP Address: ${{ env.NGROK_URL }}"

      - name: Keep Workflow Running
        run: Start-Sleep -Seconds 20940 # 5 hours 49 minutes

      - name: Restart Workflow Automatically
        run: gh workflow run Cl.yml
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
